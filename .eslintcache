[{"C:\\Users\\Dell\\Desktop\\inlamningsuppgift-2-Mohammad-Sol1\\src\\index.js":"1","C:\\Users\\Dell\\Desktop\\inlamningsuppgift-2-Mohammad-Sol1\\src\\reportWebVitals.js":"2","C:\\Users\\Dell\\Desktop\\inlamningsuppgift-2-Mohammad-Sol1\\src\\App.js":"3","C:\\Users\\Dell\\Desktop\\inlamningsuppgift-2-Mohammad-Sol1\\src\\component\\goals.js":"4","C:\\Users\\Dell\\Desktop\\inlamningsuppgift-2-Mohammad-Sol1\\src\\component\\theTargets.js":"5"},{"size":517,"mtime":1611046316248,"results":"6","hashOfConfig":"7"},{"size":375,"mtime":1611046316249,"results":"8","hashOfConfig":"7"},{"size":1146,"mtime":1611093431570,"results":"9","hashOfConfig":"7"},{"size":402,"mtime":1611093368112,"results":"10","hashOfConfig":"7"},{"size":729,"mtime":1611093429440,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"nm6chz",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Dell\\Desktop\\inlamningsuppgift-2-Mohammad-Sol1\\src\\index.js",[],["24","25"],"C:\\Users\\Dell\\Desktop\\inlamningsuppgift-2-Mohammad-Sol1\\src\\reportWebVitals.js",[],"C:\\Users\\Dell\\Desktop\\inlamningsuppgift-2-Mohammad-Sol1\\src\\App.js",["26"],"import './App.css';\r\nimport React, { useEffect, useState } from 'react';\r\nimport Goals from './component/goals'\r\nimport TheTargets from './component/theTargets'\r\n\r\n\r\nfunction App() {\r\n\r\n  const [goalsData, setGoalsData] = useState([])\r\n  const [subGoal, setSubGoal] = useState('')\r\n\r\n  function showGoal(theGoal) {\r\n    setSubGoal(theGoal)\r\n  }\r\n\r\n  function clearTargets(theGoal) {\r\n    setSubGoal(theGoal)\r\n  }\r\n\r\n\r\n  useEffect(async () => {\r\n    const response = await fetch('https://unstats.un.org/SDGAPI/v1/sdg/Goal/List?includechildren=true')\r\n    const data = await response.json();\r\n    setGoalsData(data);\r\n  }, [])\r\n\r\n\r\n  return (\r\n\r\n    <div className=\"App\">\r\n      <h1 className='app-title'> The UN's Global Goals </h1>\r\n      {subGoal ?\r\n        <main className='targets-container'>\r\n          <TheTargets targetsDataProp={subGoal} clearTargetsProp={clearTargets} />\r\n        </main>\r\n        :\r\n        <main className='goals-container'>\r\n          {goalsData.map(item => <Goals goalsDataProp={item} key={item.code} goalNum={item.code} showGoalProp={showGoal} />)}\r\n        </main>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n","C:\\Users\\Dell\\Desktop\\inlamningsuppgift-2-Mohammad-Sol1\\src\\component\\goals.js",[],"C:\\Users\\Dell\\Desktop\\inlamningsuppgift-2-Mohammad-Sol1\\src\\component\\theTargets.js",[],{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":21,"column":13,"nodeType":"33","endLine":25,"endColumn":4},"no-native-reassign",["34"],"no-negated-in-lhs",["35"],"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","no-global-assign","no-unsafe-negation"]